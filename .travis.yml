script:
      # Check that examples compile
    - sed -n '/``` cpp/,${/```$/q;/```/d;p}' README.md > main.cpp &&
      PYTHONPATH=mbed-os python mbed-os/tools/make.py -t GCC_ARM -m K82F
          --source=. --build=BUILD/K82F/GCC_ARM -j0 &&
      rm main.cpp
    - sed -n '/@code/,${/@endcode/q;/@/d;s/^ \*//;p}' SPIFBlockDevice.h > main.cpp &&
      PYTHONPATH=mbed-os python mbed-os/tools/make.py -t GCC_ARM -m K82F
          --source=. --build=BUILD/K82F/GCC_ARM -j0 &&
      rm main.cpp

      # Check that tests compile
    - rm -r BUILD && PYTHONPATH=mbed-os python mbed-os/tools/test.py
          -t GCC_ARM -m K82F --source=. --build=BUILD/TESTS/K82F/GCC_ARM -j0
          -n tests*

cache:
  pip: true
  directories:
    - $HOME/.cache/apt

before_install:
    # Make sure pipefail
    - set -o pipefail
    # Setup apt to cache
    - mkdir -p $HOME/.cache/apt/partial
    - sudo rm -rf /var/cache/apt/archives
    - sudo ln -s $HOME/.cache/apt /var/cache/apt/archives
    # Setup ppa to make sure arm-none-eabi-gcc is correct version
    - sudo add-apt-repository -y ppa:team-gcc-arm-embedded/ppa
    - sudo apt-get update -qq

install:
    # Get arm-none-eabi-gcc
    - sudo apt-get install -qq gcc-arm-embedded --force-yes
    # Get dependencies
    - git clone https://github.com/armmbed/mbed-os.git
    # Install python dependencies
    - sudo pip install -r mbed-os/requirements.txt
